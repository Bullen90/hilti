
Instructions
============

- Single return statement independent of whether we're returning a
value or not. 

Data Types
==========

- addresses and subnets
- string type is still missing instructions
- bytes 
- list

Bug fixes
=========

- Bytes objects are initialized to null pointers, which causes
crashes.

Infrastructure
===============

- Add garbage collector

- Complete exception support, includin systematicallizin the use of exception
  (what exception is thrown there). We should probably add:
        
        * an out-of-range exception, and use that when iterators are out of
        range. 

Optimizations
=============

- In CodeGen.llvmGenerateCCall, when returning structs, 
we have to create a temporary on the stack just because we can't cast an
integer into a struct. I'd think the tmp could be optimized away but it
currently isn't. 

Cleanup 
=======

- Implement "export" linkage: 
  * only exported functions get external LLVM linkage
  * otherwise, export implies everything "declare" does
  * Update: we have the export keyword now to trigger the generation
  of C stubs. But the above still needs to be done I believe.

- Mark internal libhilti functions with special linkage rather than
relying on "__"

- Remove labels' @-prefix

- Replace resolver's int-width derivation with usage of codegen's
 refine_to.

- Linkage should apply to all globals, not just functions.

- We now have codegen.llvmAddGlobalConst but there are still a few locations
  which duplicate the code to install global const. Move them over to using the
  new function.

- Do we still need:

  * type.fmtClassName()?
  * the whole type comparision logic now that we have constraint functions?
  * wildcard types? 
  * the Any type?
  * refine_to in codegen.llvmOp()
  * all or parts of the int-width logic in resolver?
  
- If we still need wildcard types, cleanup how they are instantiated (empty
list vs. "*" vs. ["*"])

Documentation
=============

- More of the docstring derived text should be automatically
included without the need for manual auto* directives.

- We need to figure out a way to document the libhilti and generally
C-level stuff.

- The type-specific implementation of operators should be documented
separately from the type's standard instruction; perhaps in a 
subsection or so.

- The auto-generated strings for instruction parameters aren't
always quite right yet. 

Misc
====

- Look at http://bjoern.hoehrmann.de/utf-8/decoder/dfa/ for an
alternative (and extremely small) UTF-8 decoder. 
