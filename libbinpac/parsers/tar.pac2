module Tar;

type FileType = enum {
    REG, LNK, SYM, CHR, BLK, DIR, FIFO, RESERVED
};

type Header = unit {
    name : bytes &length=100;
    mode : bytes &length=7;
     : uint8(0x0);
    uid : bytes &length=7;
     : uint8(0x0);
    gid : bytes &length=7;
     : uint8(0x0);
    size : bytes &length=11 &convert=$$.to_uint(8);
     : uint8(0x0);
    mktime : bytes &length=11 &convert=$$.to_uint(8);
     : uint8(0x0);
    chksum : bytes &length=6 &convert=$$.to_uint(8);
     : b"\x00 ";
    typeflag : bytes &length=1 &convert(FileType($$.to_uint())) {
      if ( ! self.typeflag ) # regular, if unknown
        self.typeflag = FileType::REG;
    }
    linkname : bytes &length=100;
    magic : bytes &length=6;
     : bytes &length=249;

    var filelen : uint64 = 0;

    on %done {
      if ( self.typeflag == FileType::REG )
        self.filelen = self.size;

      self.name = self.name.split1(b"\x00")[0];
      self.linkname = self.linkname.split1(b"\x00")[0];
    }
};

type File = unit {
    header: Header;
    data : bytes &length=self.header.filelen &transient;
    padding : bytes &length=(512-(self.header.filelen mod 512)) mod 512 &transient;
};

export type TarFile = unit {
    Files : list<File>;
     : uint8(0x0);
     : bytes &length=511 &transient;
};
