--- pac-driver: starting parsing.
[binpac] bgn start-sym sequence 'T1; T2' with flags 0
[binpac] bgn sequence 'type(bytes); <epsilon>'
[binpac] - input is 1 ...
[binpac] - lahead start is  ...
[binpac] bgn variable 'type(bytes) [=: a]'
[binpac] - input is 1 ...
[binpac] - lahead start is  ...
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] - matched 'type(bytes) [=: a]' to '1234'
[binpac] end variable 'type(bytes) [=: a]'
[binpac] bgn epsilon '<epsilon>'
[binpac] - input is  ...
[binpac] - lahead start is  ...
[binpac] end epsilon '<epsilon>'
[binpac] end sequence 'type(bytes); <epsilon>'
[binpac] bgn sequence 'type(bytes); <epsilon>'
[binpac] - input is  ...
[binpac] - lahead start is  ...
[binpac] bgn variable 'type(bytes) [=: b]'
[binpac] - input is  ...
[binpac] - lahead start is  ...
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] out of input, yielding ...
--- pac-driver: parsing yielded.
--- pac-driver: resuming parsing.
[binpac] - matched 'type(bytes) [=: b]' to '567890\x0a'
[binpac] end variable 'type(bytes) [=: b]'
[binpac] bgn epsilon '<epsilon>'
[binpac] - input is  ...
[binpac] - lahead start is  ...
1234 567890\x0a
[binpac] end epsilon '<epsilon>'
[binpac] end sequence 'type(bytes); <epsilon>'
[binpac] end start-sym sequence 'T1; T2'
