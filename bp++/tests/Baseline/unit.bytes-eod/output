[binpac] bgn start-sym sequence 'T1; T2' with flags 0
[binpac] bgn sequence 'type(bytes); <epsilon>'
[binpac] - input is 12345 ...
[binpac] - lahead start is  ...
[binpac] bgn variable 'type(bytes) [=: a]'
[binpac] - input is 12345 ...
[binpac] - lahead start is  ...
[binpac] - matched 'type(bytes) [=: a]' to '1234'
[binpac] end variable 'type(bytes) [=: a]'
[binpac] bgn epsilon '<epsilon>'
[binpac] - input is 56789 ...
[binpac] - lahead start is  ...
[binpac] end epsilon '<epsilon>'
[binpac] end sequence 'type(bytes); <epsilon>'
[binpac] bgn sequence 'type(bytes); <epsilon>'
[binpac] - input is 56789 ...
[binpac] - lahead start is  ...
[binpac] bgn variable 'type(bytes) [=: b]'
[binpac] - input is 56789 ...
[binpac] - lahead start is  ...
[binpac] - matched 'type(bytes) [=: b]' to '567890'
[binpac] end variable 'type(bytes) [=: b]'
[binpac] bgn epsilon '<epsilon>'
[binpac] - input is  ...
[binpac] - lahead start is  ...
[binpac] end epsilon '<epsilon>'
[binpac] end sequence 'type(bytes); <epsilon>'
[binpac] end start-sym sequence 'T1; T2'
========
[binpac] bgn start-sym sequence 'T1; T2' with flags 0
[binpac] bgn sequence 'type(bytes); <epsilon>'
[binpac] - input is 12345 ...
[binpac] - lahead start is  ...
[binpac] bgn variable 'type(bytes) [=: a]'
[binpac] - input is 12345 ...
[binpac] - lahead start is  ...
[binpac] - matched 'type(bytes) [=: a]' to '1234'
[binpac] end variable 'type(bytes) [=: a]'
[binpac] bgn epsilon '<epsilon>'
[binpac] - input is 5 ...
[binpac] - lahead start is  ...
[binpac] end epsilon '<epsilon>'
[binpac] end sequence 'type(bytes); <epsilon>'
[binpac] bgn sequence 'type(bytes); <epsilon>'
[binpac] - input is 5 ...
[binpac] - lahead start is  ...
[binpac] bgn variable 'type(bytes) [=: b]'
[binpac] - input is 5 ...
[binpac] - lahead start is  ...
[binpac] - matched 'type(bytes) [=: b]' to '5'
[binpac] end variable 'type(bytes) [=: b]'
[binpac] bgn epsilon '<epsilon>'
[binpac] - input is  ...
[binpac] - lahead start is  ...
[binpac] end epsilon '<epsilon>'
[binpac] end sequence 'type(bytes); <epsilon>'
[binpac] end start-sym sequence 'T1; T2'
========
[binpac] bgn start-sym sequence 'T1; T2' with flags 0
[binpac] bgn sequence 'type(bytes); <epsilon>'
[binpac] - input is 1234 ...
[binpac] - lahead start is  ...
[binpac] bgn variable 'type(bytes) [=: a]'
[binpac] - input is 1234 ...
[binpac] - lahead start is  ...
[binpac] - matched 'type(bytes) [=: a]' to '1234'
[binpac] end variable 'type(bytes) [=: a]'
[binpac] bgn epsilon '<epsilon>'
[binpac] - input is  ...
[binpac] - lahead start is  ...
[binpac] end epsilon '<epsilon>'
[binpac] end sequence 'type(bytes); <epsilon>'
[binpac] bgn sequence 'type(bytes); <epsilon>'
[binpac] - input is  ...
[binpac] - lahead start is  ...
[binpac] bgn variable 'type(bytes) [=: b]'
[binpac] - input is  ...
[binpac] - lahead start is  ...
[binpac] - matched 'type(bytes) [=: b]' to ''
[binpac] end variable 'type(bytes) [=: b]'
[binpac] bgn epsilon '<epsilon>'
[binpac] - input is  ...
[binpac] - lahead start is  ...
[binpac] end epsilon '<epsilon>'
[binpac] end sequence 'type(bytes); <epsilon>'
[binpac] end start-sym sequence 'T1; T2'
