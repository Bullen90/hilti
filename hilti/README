
======
README
======

=== Prerequisites:

  (1) Python 2.6 
  
      Note that for now the Python binary that HILTI uses is
      "python2.6" because many OSs are still using a version < 2.6
      as default. Python 2.6 packages generally seem to install a
      binary under this name though. If you don't have it after
      installing 2.6, just put a link into your PATH pointing to the
      right binary. 
    
  (2) LLVM 2.6         http://llvm.org/releases
      clang 2.6        http://clang.llvm.org
      llvm-py 0.6/svn  http://code.google.com/p/llvm-py/downloads/list
      PLY 3.3          http://www.dabeaz.com/ply
      CMake 2.6.4      http://www.cmake.org
      Flex 2.5.35      http://flex.sourceforge.net/#downloads

      If you want to generate the documentation (optional):
      
      Sphinx 0.6       http://sphinx.pocoo.org
      Graphviz 2.24.0  http://www.graphviz.org

      It's obviously a pain to assemble all these pieces manually
      and then keep them up-to-data as new versions are required.
      Therefore, there is a meta-package "hilti-deps" available that
      contains the source for all the packagages in prerequister set
      (2) (in other words: all except Python). Sometimes there also
      additional patches requires for some of the packages and
      "hilti-deps" will then also include those as well. 
      
      To install hilti-deps, do the following: 
      
      * Download the latest hilti-deps package from 
      
          http://www.icir.org/robin/hilti
            
      * Untar into a directory <prefix> where the compiled packages
      can stay, i.e., under /opt, and then run "make" in the src/
      sub-directory.
      
          > cd /opt
          > tar xzvf hilti-deps-XXX.tgz
          > cd hilti-deps/src
          > make

      * You must set a environment variable HILTIDEPS pointing to
      the <prefix> directory for the HILTI tools to find the stuff. 
      a while. Once done, all the packages will have been installed
      in <prefix>. 
      
      * You must set a environment variable HILTIDEPS pointing to
      <prefix> for the HILTI tools to find the stuff. In addition,
      if you want to generally adapt your environment to make use of
      these packages, run (in a sh):
      
          > eval `<prefix>/bin/setup-paths

      * Finally, note that by default the packages required only for
      building the documentation aren't installed. If you want them
      as well, enable them in <prefix>/src/archives.cfg before you
      run "make". 

=== Usage

* There's not much in terms of installing anything system-wide yet
  but you should be able to get the test-suite to pass rather easily:
  
  1. First, you need to build libhilti:
  
     > cd libhilti && make
     
     There shouldn't be any errors messages if all the dependencies
     have been installed correctly. 
     
  2. Then just run the Makefile in tests:
  
     > cd tests && make
     
     All tests are supposed to pass. If there's a problem with a test,
     "./run-tester -d path/to/test" will give you debugging output. 

* Starting points

  - Documentation is located in doc/html. It's a work in progress,
    with more and more pieces appearing there over time. To build,
    just type make. 
  
  - Look at the HILTI source files in the tests/* subdirectories to
    see how HILTI programs look like.

  - Tools:

    * tools/hiltic is the HILTI->LLVM compiler
  
    * tools/hilti-build runs the whole chain HILTI-to-native-executable. 

  - Look at tests/run-tester to see what environment variables to
    set for running the HILTI tools. 
    
