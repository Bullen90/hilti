# $Id$
#
# User-visible libhilti functions.
#
#
# Todo: We need to document these but first need to figure out how to 
# generaly deal with C functions in the Sphinx-built docs. 

module Hilti

declare "C-HILTI" void print(any obj, bool newline = True)
declare "C-HILTI" string fmt(string fmt, tuple<*> vals)

enum Packed {

    # String 
    ASCIIZ,

    # Integer
    # %doc-packed-int-start
    Int8,    		#  8-bit signed integer in host byte order.
    Int16,          # 16-bit signed integer in host byte order.
    Int32,          # 32-bit signed integer in host byte order.
    Int64,          # 64-bit signed integer in host byte order.
    Int8Big,        #  8-bit signed integer in big-endian byte order.
    Int16Big,       # 16-bit signed integer in big-endian byte order.
    Int32Big,       # 32-bit signed integer in big-endian byte order.
    Int64Big,       # 64-bit signed integer in big-endian byte order.
    Int8Little,     #  8-bit signed integer in little-endian byte order.
    Int16Little,    # 16-bit signed integer in little-endian byte order.
    Int32Little,    # 32-bit signed integer in little-endian byte order.
    Int64Little,    # 64-bit signed integer in little-endian byte order.
    UInt8,    		#  8-bit unsigned integer in host byte order.
    UInt16,         # 16-bit unsigned integer in host byte order.
    UInt32,         # 32-bit unsigned integer in host byte order.
    UInt8Big,       #  8-bit unsigned integer in big-endian byte order.
    UInt16Big,      # 16-bit unsigned integer in big-endian byte order.
    UInt32Big,      # 32-bit unsigned integer in big-endian byte order.
    UInt8Little,    #  8-bit unsigned integer in little-endian byte order.
    UInt16Little,   # 16-bit unsigned integer in little-endian byte order.
    UInt32Little    # 32-bit unsigned integer in little-endian byte order.
    # %doc-packed-int-end 
}    
