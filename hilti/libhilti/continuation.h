// $Id$

#ifndef HILTI_CONTINUATION_H
#define HILTI_CONTINUATION_H

#define HLT_BOUND_FUNCTION_STACK_SIZE 1024 ///< The initial amount of stack size to allocate for bound functions. 

/// A continuation instance. We don't define the attributes further as they
/// aren't usable from C. 
typedef struct {
    void *succ;
    void *frame;
    void *eoss;
} hlt_continuation;

/// A stack to be used when calling bound function.
typedef struct {
    void* fptr;
    void* eoss;
} hlt_stack;

struct hlt_exception;
struct hlt_execution_context;

// This function is generated by the code generator(!).
extern void hlt_call_bound_function(hlt_continuation* func, struct hlt_execution_context* ctx, struct hlt_exception** excpt);

/// Creates a new stack to be used when call bound functions. 
/// 
/// size: The size of the stack. If zero, the default ~~HLT_DEFAULT_STACK_SIZE is used.
///
/// excpt: &
/// 
/// Returns: The new stack.
/// 
/// Note: The default stack size is deliberately smaller than what hiltic
/// uses, as these stack are most likely to be used with short call-back functions. 
extern hlt_stack* hlt_stack_new(int size, struct hlt_exception** excpt);

#endif
