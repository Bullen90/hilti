# Makes sure that context promotion between equivalent thread contexts
# reuses the original context object.
#
# @TEST-EXEC:  hilti-build2 %INPUT -o a.out
# @TEST-EXEC:  ./a.out | sort | uniq -c | wc -l >output
# @TEST-EXEC:  btest-diff output

module Main

import Hilti

context {
    addr orig_h,
    port orig_p,
    addr resp_h,
    port resp_p
}

scope Connection = { orig_h, orig_p, resp_h, resp_p }

void FuncConn() &scope=Connection {
    local ref<context> ctx
    local int<64> vid
    local string s

    local int<64> vid
    vid = thread.id
    ctx = thread.get_context

    s = call Hilti::fmt("FuncGlobal: vid %d ctx %s ptr %p", (vid, ctx, ctx))
    call Hilti::print (s)
}

void run() &scope=Connection {
    thread.set_context (192.160.0.1, 1234/tcp, 10.0.0.1, 80/tcp)
    thread.schedule FuncConn()
    thread.schedule FuncConn()
    thread.schedule FuncConn()
}
